// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information on a DigitalOcean database cluster resource.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-digitalocean/blob/master/website/docs/d/database_cluster.html.markdown.
func LookupDatabaseCluster(ctx *pulumi.Context, args *GetDatabaseClusterArgs) (*GetDatabaseClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
	}
	outputs, err := ctx.Invoke("digitalocean:index/getDatabaseCluster:getDatabaseCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetDatabaseClusterResult{
		Database: outputs["database"],
		Engine: outputs["engine"],
		Host: outputs["host"],
		MaintenanceWindows: outputs["maintenanceWindows"],
		Name: outputs["name"],
		NodeCount: outputs["nodeCount"],
		Port: outputs["port"],
		Region: outputs["region"],
		Size: outputs["size"],
		Uri: outputs["uri"],
		Urn: outputs["urn"],
		User: outputs["user"],
		Version: outputs["version"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getDatabaseCluster.
type GetDatabaseClusterArgs struct {
	// The name of the database cluster.
	Name interface{}
}

// A collection of values returned by getDatabaseCluster.
type GetDatabaseClusterResult struct {
	// Name of the cluster's default database.
	Database interface{}
	// Database engine used by the cluster (ex. `pg` for PostreSQL).
	Engine interface{}
	// Database cluster's hostname.
	Host interface{}
	// Defines when the automatic maintenance should be performed for the database cluster.
	MaintenanceWindows interface{}
	Name interface{}
	// Number of nodes that will be included in the cluster.
	NodeCount interface{}
	// Network port that the database cluster is listening on.
	Port interface{}
	// DigitalOcean region where the cluster will reside.
	Region interface{}
	// Database droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`).
	Size interface{}
	// The full URI for connecting to the database cluster.
	Uri interface{}
	// The uniform resource name of the database cluster.
	Urn interface{}
	// Username for the cluster's default user.
	User interface{}
	// Engine version used by the cluster (ex. `11` for PostgreSQL 11).
	Version interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
