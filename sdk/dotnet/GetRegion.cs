// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static partial class Invokes
    {
        /// <summary>
        /// Get information on a single DigitalOcean region. This is useful to find out 
        /// what Droplet sizes and features are supported within a region.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-digitalocean/blob/master/website/docs/d/region.html.md.
        /// </summary>
        [Obsolete("Use GetRegion.InvokeAsync() instead")]
        public static Task<GetRegionResult> GetRegion(GetRegionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionResult>("digitalocean:index/getRegion:getRegion", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetRegion
    {
        /// <summary>
        /// Get information on a single DigitalOcean region. This is useful to find out 
        /// what Droplet sizes and features are supported within a region.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-digitalocean/blob/master/website/docs/d/region.html.md.
        /// </summary>
        public static Task<GetRegionResult> InvokeAsync(GetRegionArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionResult>("digitalocean:index/getRegion:getRegion", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetRegionArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A human-readable string that is used as a unique identifier for each region.
        /// </summary>
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetRegionArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetRegionResult
    {
        /// <summary>
        /// A boolean value that represents whether new Droplets can be created in this region.
        /// </summary>
        public readonly bool Available;
        /// <summary>
        /// A set of features available in this region.
        /// </summary>
        public readonly ImmutableArray<string> Features;
        /// <summary>
        /// The display name of the region.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A set of identifying slugs for the Droplet sizes available in this region.
        /// </summary>
        public readonly ImmutableArray<string> Sizes;
        /// <summary>
        /// A human-readable string that is used as a unique identifier for each region.
        /// </summary>
        public readonly string Slug;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRegionResult(
            bool available,
            ImmutableArray<string> features,
            string name,
            ImmutableArray<string> sizes,
            string slug,
            string id)
        {
            Available = available;
            Features = features;
            Name = name;
            Sizes = sizes;
            Slug = slug;
            Id = id;
        }
    }
}
